- name: Ruby
  hosts: localhost
  become: true

  vars_files:
    - ../../vars/main.yml
  vars:
    user: "{{ instance.user.name }}"
    home: "/{{ instance.user.home }}/{{ user }}"
    public_directory: "{{ instance.public_directory }}"
    rbenv_url: https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer
    rbenv_installer: rbenv.sh
    rbenv_installer_path: "{{ public_directory }}/{{ rbenv_installer }}"
    rbenv_installer_user_home_path: "{{ home }}/{{ rbenv_installer }}"

  pre_tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        update_cache: yes
      loop: 
        - autoconf
        - patch
        - build-essential
        - rustc
        - libssl-dev
        - libyaml-dev
        - libreadline6-dev
        - zlib1g-dev
        - libgmp-dev
        - libncurses5-dev
        - libffi-dev
        - libgdbm6
        - libgdbm-dev
        - libdb-dev
        - uuid-dev

    - name: Download rbenv
      ansible.builtin.shell: "curl -fsSL {{ rbenv_url }} -o {{ rbenv_installer }}"
      args:
        chdir: "{{ public_directory }}"

    - name: Make it executable
      ansible.builtin.file:
        path: "{{ rbenv_installer_path }}"
        group: sudo
        mode: "0770"

    - name: Copy installer to local user home
      ansible.builtin.copy:
        src: "{{ rbenv_installer_path }}"
        dest: "{{ rbenv_installer_user_home_path }}"
        owner: "{{ user }}"
        mode: "0770"
        group: sudo

    - name: Install dependency needed to set permissions as a local user
      ansible.builtin.apt:
        name: acl
        update_cache: true
    
  tasks:
    - name: Install rbenv
      become: true
      become_user: "{{ user }}"
      ansible.builtin.shell: "./{{ rbenv_installer }}"
      args:
        chdir: "{{ home }}"
  
  post_tasks:
    - name: Add to path
      ansible.builtin.lineinfile:
        path: "{{ home }}/.bashrc"
        backup: true
        create: true
        line: eval "$(~/.rbenv/bin/rbenv init - bash)"
    
    - name: Ensure sqlite3 is present
      ansible.builtin.apt:
        name: sqlite3
        update_cache: true

    - name: Remove rbenv installer from local user home
      ansible.builtin.file:
        path: "{{ rbenv_installer_user_home_path }}"
        state: absent
    
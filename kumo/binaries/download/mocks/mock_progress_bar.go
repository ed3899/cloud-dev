// Code generated by MockGen. DO NOT EDIT.
// Source: D:\Documents\DevEnvironments\Cloud\Jammy64\kumo\binz\download\mocks\interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockProgressBar is a mock of ProgressBar interface.
type MockProgressBar struct {
	ctrl     *gomock.Controller
	recorder *MockProgressBarMockRecorder
}

// MockProgressBarMockRecorder is the mock recorder for MockProgressBar.
type MockProgressBarMockRecorder struct {
	mock *MockProgressBar
}

// NewMockProgressBar creates a new mock instance.
func NewMockProgressBar(ctrl *gomock.Controller) *MockProgressBar {
	mock := &MockProgressBar{ctrl: ctrl}
	mock.recorder = &MockProgressBarMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProgressBar) EXPECT() *MockProgressBarMockRecorder {
	return m.recorder
}

// IncrBy mocks base method.
func (m *MockProgressBar) IncrBy(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncrBy", arg0)
}

// IncrBy indicates an expected call of IncrBy.
func (mr *MockProgressBarMockRecorder) IncrBy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrBy", reflect.TypeOf((*MockProgressBar)(nil).IncrBy), arg0)
}
